{"meta":{"title":"JoruaChan技术博客","subtitle":"永远不甘于现状","description":"","author":"JoruaChan","url":"http://joruachan.cn","root":"/"},"pages":[{"title":"","date":"2021-01-28T14:59:18.875Z","updated":"2021-01-28T14:59:18.875Z","comments":true,"path":"about/index.html","permalink":"http://joruachan.cn/about/index.html","excerpt":"","text":"「 In me the tiger sniffs the rose;(心有猛虎，细嗅蔷薇) 」 —— Siegfried Sassoon（译自余光中） 笔者诉说如果此时你翻到此页，我是否可以自信地问你一声：是我的博客某方面吸引到你了吧！哈哈，笔者开了个玩笑，一直想要搭建个属于自己的博客，苦于各种原因，或者说自己没有静下心来落实这件事。 在这个“阳光明媚”的夜晚，我坚定地告诉你们，我肯定会努力建设本博客站的！不仅博客，包括我的GitHub项目，我会争取每天、每周更新、发布的！ 如果您有任何建议或者疑问，欢迎在此页进行留言！ 记录博客建设 2020-01-26 域名备案完成 joruachan.cn 终于有了专属于我自己的域名啦，撒花！✿✿ヽ(°▽°)ノ✿ 2021-01-17 初步搭建 是时候觉得应该搭建一个博客了，之前了解过hexo，但是一直没有着手实践；选择了Volantis主题，实践完后，体验非常好。操作简单、搭建方便，并且博客整体样式显得很年轻化，适合我们年老心未老的老年人！哈哈，坚持写作、记录技术！期待我的博客能够越来越火！希望你们能挺我起来！"},{"title":"essay","date":"2021-01-27T14:32:16.000Z","updated":"2021-01-28T15:02:52.175Z","comments":true,"path":"essay/index.html","permalink":"http://joruachan.cn/essay/index.html","excerpt":"","text":"","author":"Jorua"}],"posts":[{"title":"纪实:nodejs+hexo+volantis快速构建个人Blog","slug":"fast-build-blog","date":"2021-01-16T16:00:00.000Z","updated":"2021-01-28T14:59:27.772Z","comments":true,"path":"2021/01/17/fast-build-blog/","link":"https://joruachan.cn/2021/01/17/fast-build-blog/","permalink":"http://joruachan.cn/2021/01/17/fast-build-blog/","excerpt":"","text":"即使身为一个钢铁直男的技术人，能拥有一个分享自己技术心得和生活分享的小窝，想必是每个技术人都考虑过的事情吧! 笔者这就告诉你一个秘密：只需执行几行命令，改点配置，一个端庄不失典雅的博客网站就能生成好！ 搭建环境简介nodejs + hexo; nodejs的安装本文不再介绍，不熟悉的同学可前往nodejs官网学习并安装；本站选用hexo的volantis主题介绍建站的， hexo提供了330款主题，如有需要，可前往查看其他主题 NodeJshttps://nodejs.org/en/ Hexohttps://hexo.io/ Volantishttps://volantis.js.org/ hexo简介hexo 自称为：快速、简洁且高效的博客框架。 笔者用起来确实还可以，大概介绍下几个特性： 提供了不同的layout，可将文章存为草稿，需要时publish即可； 可维护全局的数据，在source/_data文件夹下添加yaml文件，通过site.data获取； 可指定文件的特有变量，通过Front-matter实现； 支持模板，在scaffolds文件夹下可自定义模板，并进行发布； 支持标签插件，可以在文章文件中使用标签%%来插入特定内容； 提供命令行操作，如：hexo init初始化项目、hexo new新建文章、hexo pulish发布草稿文件、hexo generate生成静态文件、hexo server启动服务器； hexo搭建博客步骤 前提是必须安装好git和nodejs； 执行 “npm install -g hexo-cli”，安装好hexo； 选定文件夹，通过 “hexo init $folder” 初始化一个名为 $folder 的文件夹； cd $folder, 再执行npm install，至此hexo的博客框架已经搭建完成！ 完成上述步骤后，可执行hexo server, 访问http://localhost:4000, 会发现一个HelloWorld页面已经可以访问！ 选用volantis主题 设置项目使用的主题: 项目根目录下的_config.yml文件中设置 theme: volantis; 如果Hexo版本在5.0.2及以上，可以直接通过npm i hexo-theme-volantis进行安装；笔者为了项目的可读性，采用了源代码拷贝到theme文件夹的方案（记得删除.git文件夹,否则git提交时会出问题!） 按照依赖的插件：npm i hexo-generator-search hexo-generator-json-content(站内搜索)，npm i hexo-renderer-stylus（Stylus 渲染器） 完成上述步骤后执行hexo server, 访问http://localhost:4000, 是不是发现端庄不失典雅的博客网站已经完成了！ 尝试新建文章执行 hexo new post $newPostName，会在_post文件夹下新建一个名为$newPostName的md文件，一个新的文章便建立完成。 这时你只需要关注你的博文输出即可啦！ 发布至GitHub Pages如果你期望能通过GitHub Pages来访问你的博客网站，做如下几步： 通过GitHub新建一个repository，名为：&lt;你的 GitHub 用户名&gt;.github.io； 本地检出该repository； 在博客源码的项目中执行命令：hexo generate –deploy，会生成public文件夹，该文件夹里便是博客所有的静态页面文件； 将public文件夹中的文件全部拷贝到新建repository的master分支下； 将master文件推送至远程master分支即可！ 静待一会，访问：http://&lt;你的 GitHub 用户名&gt;.github.io便能访问你自定义的博客了！ 如果你有自己的域名，可以在域名解析配置成 记录类型：CNAME，记录值：&lt;你的 GitHub 用户名&gt;.github.io。 注意了！！！ 此时还需要在GitHub Page项目中根目录下加上名为CNAME的文件，文件内容为你自己的域名。 正如你看到的，搭建一个个人博客网站就是如此便捷！ 如果你喜欢的话，点个赞，分享分享下吧！谢谢~","categories":[],"tags":[],"author":"Jorua"}],"categories":[],"tags":[]}